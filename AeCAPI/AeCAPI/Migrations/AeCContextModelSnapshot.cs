// <auto-generated />
using System;
using AeCAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AeCAPI.Migrations
{
    [DbContext(typeof(AeCContext))]
    partial class AeCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AeCAPI.Entity.Aeroportos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("atualizado_em")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_icao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("condicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("condicao_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("direcao_vento")
                        .HasColumnType("int");

                    b.Property<int>("pressao_atmosferica")
                        .HasColumnType("int");

                    b.Property<int>("temp")
                        .HasColumnType("int");

                    b.Property<int>("umidade")
                        .HasColumnType("int");

                    b.Property<int>("vento")
                        .HasColumnType("int");

                    b.Property<string>("visibilidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("aeroporto");
                });

            modelBuilder.Entity("AeCAPI.Entity.Cidades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("atualizado_em")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("cidades");
                });

            modelBuilder.Entity("AeCAPI.Entity.Clima", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("condicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("condicao_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCidade")
                        .HasColumnType("int")
                        .HasColumnName("idCidade");

                    b.Property<int>("indice_uv")
                        .HasColumnType("int");

                    b.Property<int>("max")
                        .HasColumnType("int");

                    b.Property<int>("min")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idCidade");

                    b.ToTable("climas");
                });

            modelBuilder.Entity("AeCAPI.Entity.log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("codeMessage")
                        .HasColumnType("int");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("AeCAPI.Entity.Clima", b =>
                {
                    b.HasOne("AeCAPI.Entity.Cidades", "Cidades")
                        .WithMany("clima")
                        .HasForeignKey("idCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("AeCAPI.Entity.Cidades", b =>
                {
                    b.Navigation("clima");
                });
#pragma warning restore 612, 618
        }
    }
}
